#!/bin/bash
# Bundeskanzler-KI Starter Script
# Vereinfacht den Start der verschiedenen KI-Versionen

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
cd "$SCRIPT_DIR"

# Farben f√ºr Output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Banner
echo -e "${BLUE}ü§ñ Bundeskanzler-KI Starter${NC}"
echo "=========================="

# Pr√ºfe Virtual Environment
if [[ "$VIRTUAL_ENV" != *"bkki_venv"* ]]; then
    echo -e "${YELLOW}‚ö†Ô∏è  Virtual Environment nicht aktiv. Aktiviere...${NC}"
    if [[ -f "bin/activate" ]]; then
        source bin/activate
        echo -e "${GREEN}‚úÖ Virtual Environment aktiviert${NC}"
    else
        echo -e "${RED}‚ùå Virtual Environment nicht gefunden!${NC}"
        echo -e "${YELLOW}F√ºhren Sie 'source bin/activate' manuell aus${NC}"
        exit 1
    fi
else
    echo -e "${GREEN}‚úÖ Virtual Environment bereits aktiv${NC}"
fi

# Funktion: Verf√ºgbare Optionen anzeigen
show_options() {
    echo -e "\n${GREEN}Verf√ºgbare Optionen:${NC}"
    echo "1) üéØ Verbesserte KI (EMPFOHLEN) - Beste Performance"
    echo "2) üåê Web-Interface (Streamlit)"
    echo "3) üì° API Server"
    echo "4) üîß Original KI (Interaktiv)"
    echo "5) üß™ Einfache KI (Test)"
    echo "6) üìä Status & Logs"
    echo "7) üì° Daten aktualisieren"
    echo "8) üßπ Cache bereinigen"
    echo "9) ‚ùå Beenden"
    echo ""
}

# Funktion: KI-Status pr√ºfen
check_status() {
    echo -e "${BLUE}üìä System Status:${NC}"
    
    # GPU Check
    if python -c "import tensorflow as tf; print('GPU verf√ºgbar:', len(tf.config.list_physical_devices('GPU')) > 0)" 2>/dev/null; then
        echo -e "‚úÖ TensorFlow GPU-Support: ${GREEN}OK${NC}"
    else
        echo -e "‚ö†Ô∏è  TensorFlow GPU-Support: ${YELLOW}Nicht verf√ºgbar${NC}"
    fi
    
    # RAG System Check
    if python -c "
import sys, os
sys.path.append('.')
from core.rag_system import RAGSystem
corpus_path = os.path.join('data', 'corpus.json')
RAGSystem(corpus_path=corpus_path)
print('RAG-System OK')
" &>/dev/null; then
        echo -e "‚úÖ RAG-System: ${GREEN}OK${NC}"
    else
        echo -e "‚ùå RAG-System: ${RED}Fehler${NC}"
    fi
    
    # Models Check
    if [[ -f "models/rag_index.faiss" ]]; then
        echo -e "‚úÖ RAG-Index: ${GREEN}Vorhanden${NC}"
    else
        echo -e "‚ö†Ô∏è  RAG-Index: ${YELLOW}Nicht gefunden${NC}"
    fi
    
    # Logs
    if [[ -f "data/log.txt" ]]; then
        echo -e "üìù Letzte Log-Eintr√§ge:"
        tail -n 3 data/log.txt 2>/dev/null || echo "Keine Logs verf√ºgbar"
    fi
}

# Funktion: Daten aktualisieren
update_data() {
    echo -e "${BLUE}üì° Aktualisiere Wissensbasis...${NC}"
    if python core/data_updater.py; then
        echo -e "${GREEN}‚úÖ Wissensbasis aktualisiert${NC}"
    else
        echo -e "${RED}‚ùå Fehler bei der Datenaktualisierung${NC}"
    fi
}

# Hauptmen√º
while true; do
    show_options
    read -p "W√§hlen Sie eine Option (1-9): " choice
    
    case $choice in
        1)
            echo -e "${GREEN}üéØ Starte verbesserte KI...${NC}"
            python core/verbesserte_ki.py
            ;;
        2)
            echo -e "${GREEN}üåê Starte Web-Interface...${NC}"
            echo -e "${BLUE}√ñffne http://localhost:8501 in Ihrem Browser${NC}"
            python web/webgui_ki.py
            ;;
        3)
            echo -e "${GREEN}üì° Starte API Server...${NC}"
            echo -e "${BLUE}API verf√ºgbar unter http://localhost:8000${NC}"
            python core/bundeskanzler_api.py
            ;;
        4)
            echo -e "${GREEN}üîß Starte Original KI...${NC}"
            python core/bundeskanzler_ki.py interactive
            ;;
        5)
            echo -e "${YELLOW}üß™ Einfache KI (ARCHIVIERT)${NC}"
            echo -e "${BLUE}Die einfache KI wurde archiviert: archive/unused_code/ki_versions/${NC}"
            echo -e "${BLUE}Verwenden Sie stattdessen Option 1 (Verbesserte KI)${NC}"
            ;;
        6)
            check_status
            ;;
        7)
            update_data
            ;;
        8)
            clean_cache
            ;;
        9)
            echo -e "${GREEN}üëã Auf Wiedersehen!${NC}"
            exit 0
            ;;
        *)
            echo -e "${RED}‚ùå Ung√ºltige Option. Bitte 1-9 w√§hlen.${NC}"
            ;;
    esac
    
    echo ""
    read -p "Dr√ºcken Sie Enter um fortzufahren..."
    clear
done