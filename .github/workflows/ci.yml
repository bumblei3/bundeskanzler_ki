name: Bundeskanzler KI CI/CD

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main, develop ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.12]

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: bundeskanzler_test
          POSTGRES_USER: bundeskanzler
          POSTGRES_PASSWORD: test_password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run linting
      run: |
        pip install flake8 black
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude=lib,bin,include,share
        black --check . --exclude="/(lib|bin|include|share)/"

    - name: Run unit tests
      env:
        DATABASE_URL: postgresql+asyncpg://bundeskanzler:test_password@localhost:5432/bundeskanzler_test
        REDIS_URL: redis://localhost:6379/0
      run: |
        pytest tests/ -m "unit" --cov=. --cov-report=xml -v

    - name: Run integration tests
      env:
        DATABASE_URL: postgresql+asyncpg://bundeskanzler:test_password@localhost:5432/bundeskanzler_test
        REDIS_URL: redis://localhost:6379/0
      run: |
        pytest tests/ -m "integration" --cov-append --cov-report=xml -v

    - name: Run API tests
      env:
        DATABASE_URL: postgresql+asyncpg://bundeskanzler:test_password@localhost:5432/bundeskanzler_test
        REDIS_URL: redis://localhost:6379/0
      run: |
        pytest tests/ -m "api" --cov-append --cov-report=xml -v

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

    - name: Run security tests
      run: |
        pip install bandit
        bandit -r . -x tests/ -f json -o security-report.json || true

    - name: Upload security report
      uses: actions/upload-artifact@v3
      with:
        name: security-report
        path: security-report.json

  docker:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: bundeskanzler-ki:test
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Test Docker image
      run: |
        docker run --rm bundeskanzler-ki:test python -c "import bundeskanzler_api; print('âœ… Docker image OK')"

  performance:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: 3.12

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run performance tests
      run: |
        pytest tests/ -m "performance" --benchmark-only --benchmark-json=benchmark.json

    - name: Upload benchmark results
      uses: actions/upload-artifact@v3
      with:
        name: benchmark-results
        path: benchmark.json